name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd shared && npm ci
        cd ../client && npm ci

    - name: Build shared package
      run: |
        cd shared
        npm run build

    - name: Build client for production
      run: |
        cd client
        npm run build
      env:
        VITE_API_BASE_URL: ${{ secrets.API_BASE_URL || 'https://your-backend-url.com' }}
        VITE_SOCKET_URL: ${{ secrets.SOCKET_URL || 'https://your-backend-url.com' }}

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: './client/dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd shared && npm ci
        cd ../client && npm ci

    - name: Run tests
      run: |
        cd shared && npm test -- --passWithNoTests
        cd ../client && npm test -- --passWithNoTests

    - name: Run linting
      run: |
        cd shared && npm run lint || true
        cd ../client && npm run lint || true